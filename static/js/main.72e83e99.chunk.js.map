{"version":3,"sources":["Greet/Greet.js","Exercise/Exercise.js","Stats/Stats.js","Popups/Usage.js","Popups/DevLog.js","App.js","reportWebVitals.js","index.js"],"names":["Greet","props","state","operator","factor","first","second","titles","texts","sum","decr","mul","frac","mins","maxs","handleChanges","bind","console","log","this","result","limitFirst","className","type","name","min","max","value","step","onChange","limitSecond","limitFactor","event","NAME","target","TYPE","Number","setState","OPERATOR","changeTitles","LIMITS_INPUT","limitsRender","onClick","React","Component","Exercise","load","undefined","solveToFinish","current","autoFocus","correct","total","sym","answer","stats","handleAnswer","generateEquasion","VALUE","statsUpd","check","Math","floor","random","pow","temp","finish","pattern","placeholder","Stats","Usage","popupToggle","greetUsage","usage","DevLog","lastUpdated","content","href","devLog","App","status","options","newStats","limits","OPTIONS","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72e83e99.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Greet.css'\r\n\r\nclass Greet extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      operator: props.operator,\r\n      factor: props.factor ? props.factor : 2,\r\n      first: props.first ? props.first : 2,\r\n      second: props.second ? props.second : 1,\r\n    }\r\n    this.titles = {\r\n      first: '###',\r\n      second: '###',\r\n      factor: 'Множитель',\r\n    }\r\n\r\n    this.texts = {\r\n      sum: {\r\n        first: '1-м слагаемом',\r\n        second: '2-м слагаемом',\r\n      },\r\n      decr: {\r\n        first: 'уменьшаемом',\r\n        second: 'вычитаемом',\r\n      },\r\n      mul: {\r\n        first: '1-м множителе',\r\n        second: '2-м множителе',\r\n      },\r\n      frac: {\r\n        first: 'делимом',\r\n        second: 'делителе',\r\n      },\r\n    }\r\n\r\n    this.mins = {\r\n      first: 1,\r\n      second: 1,\r\n      factor: 2,\r\n    }\r\n    this.maxs = {\r\n      first: 3,\r\n      second: 3,\r\n      factor: 9,\r\n    }\r\n\r\n    this.handleChanges = this.handleChanges.bind(this);\r\n  }\r\n\r\n  changeTitles(operator) {\r\n    console.log('titles ' + operator);\r\n    console.log(this.texts);\r\n    switch (operator) {\r\n      case 'mul':\r\n        this.titles.first = this.texts.mul.first;\r\n        this.titles.second = this.texts.mul.second;\r\n        break;\r\n      case 'frac':\r\n        this.titles.first = this.texts.frac.first;\r\n        this.titles.second = this.texts.frac.second;\r\n        break;\r\n      case 'sum':\r\n        this.titles.first = this.texts.sum.first;\r\n        this.titles.second = this.texts.sum.second;\r\n        break;\r\n      case 'decr':\r\n        this.titles.first = this.texts.decr.first;\r\n        this.titles.second = this.texts.decr.second;\r\n        break;\r\n    }\r\n    console.log(this.titles);\r\n  }\r\n\r\n  limitsRender(operator) {\r\n    let result;\r\n    let limitFirst = (\r\n      <div className='number'>\r\n        <span className='number__title'>\r\n          {this.titles.first}\r\n        </span>\r\n        <input\r\n          className='number__input'\r\n          type='number'\r\n          name='first'\r\n          min={this.mins.first}\r\n          max={this.maxs.first}\r\n          value={this.state.first}\r\n          step='1'\r\n          onChange={this.handleChanges} />\r\n      </div>\r\n    );\r\n    let limitSecond = (\r\n      <div className='number'>\r\n        <span className='number__title'>\r\n          {this.titles.second}\r\n        </span>\r\n        <input\r\n          className='number__input'\r\n          type='number'\r\n          name='second'\r\n          min={this.mins.second}\r\n          max={this.maxs.second}\r\n          value={this.state.second}\r\n          step='1'\r\n          onChange={this.handleChanges} />\r\n      </div>\r\n    );\r\n    let limitFactor = (\r\n      <div className='number'>\r\n        <span className='number__title'>\r\n          {this.titles.factor}\r\n        </span>\r\n        <input\r\n          className='number__input'\r\n          type='number'\r\n          name='factor'\r\n          min={this.mins.factor}\r\n          max={this.maxs.factor}\r\n          value={this.state.factor}\r\n          step='1'\r\n          onChange={this.handleChanges} />\r\n      </div>\r\n    );\r\n    switch (operator) {\r\n      case 'mul':\r\n        result = (\r\n          <div className='container gray'>\r\n            <div className=''>\r\n              <div>Число разрядов в</div>\r\n              {limitFirst}\r\n              {limitSecond}\r\n            </div>\r\n            <div className=''>\r\n              {limitFactor}\r\n            </div>\r\n          </div>\r\n        );\r\n        break;\r\n\r\n      default:\r\n        result = (\r\n          <div className='container gray'>\r\n            <div className=''>\r\n              <div>Число разрядов в</div>\r\n              {limitFirst}\r\n              {limitSecond}\r\n            </div>\r\n          </div>\r\n        );\r\n        break;\r\n    }\r\n\r\n    return (\r\n      result\r\n    )\r\n  }\r\n\r\n  handleChanges(event) {\r\n    const NAME = event.target.name;\r\n    const TYPE = event.target.type;\r\n\r\n    let value = event.target.value;\r\n\r\n    switch (TYPE) {\r\n      case 'number':\r\n        switch (NAME) {\r\n          case 'first':\r\n            if (Number(value) > this.maxs.first) {\r\n              value = this.maxs.first;\r\n            }\r\n            break;\r\n          case 'second':\r\n            if (Number(value) > this.maxs.first) {\r\n              value = this.maxs.second;\r\n            }\r\n            break;\r\n          case 'factor':\r\n            if (Number(value) > this.maxs.first) {\r\n              value = this.maxs.factor;\r\n            }\r\n            break;\r\n        \r\n          default:\r\n            break;\r\n        }\r\n        this.setState({\r\n          [NAME]: Number(value)\r\n        })\r\n        break;\r\n\r\n      case 'button':\r\n        this.setState({\r\n          [NAME]: value\r\n        })\r\n        break;\r\n\r\n      case 'select-one':\r\n        // this.changeTitles(VALUE);\r\n        this.setState({\r\n          [NAME]: value\r\n        })\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.props.handleChanges(event);\r\n  }\r\n\r\n  render() {\r\n    const OPERATOR = this.state.operator;\r\n    this.changeTitles(OPERATOR);\r\n    //let limitsInput;\r\n    const LIMITS_INPUT = this.limitsRender(OPERATOR);\r\n\r\n\r\n    return (\r\n      <div className='Greet container' >\r\n        <button\r\n          className='content'\r\n          type='button'\r\n          onClick={this.handleChanges}\r\n          name='load'\r\n          value='exercise'>\r\n          Старт\r\n        </button>\r\n        <select\r\n          value={this.state.operator}\r\n          onChange={this.handleChanges}\r\n          name='operator'\r\n          className='content'>\r\n          <option value='sum'>Сложение</option>\r\n          <option value='decr'>Вычитание</option>\r\n          <option value='mul'>Умножение</option>\r\n          <option value='frac'>Деление</option>\r\n        </select>\r\n        {LIMITS_INPUT}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Greet;\r\n","import React from 'react';\r\nimport './Exercise.css';\r\nclass Exercise extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      load: undefined,\r\n      operator: props.operator,\r\n      solveToFinish: props.solveToFinish ? props.solveToFinish : 5,\r\n      current: '',\r\n      autoFocus: false,\r\n      factor: props.factor ? props.factor : 2,\r\n      first: props.first ? props.first : 2,\r\n      second: props.second ? props.second : 1,\r\n      correct: props.correct ? props.correct : 0,\r\n      total: props.total ? props.total : 0,\r\n    }\r\n\r\n    this.sym = '';\r\n    switch (this.state.operator) {\r\n      case 'sum':\r\n        this.sym = '+'\r\n        break;\r\n      case 'decr':\r\n        this.sym = '-'\r\n        break;\r\n      case 'mul':\r\n        this.sym = '*'\r\n        break;\r\n      case 'frac':\r\n        this.sym = ':'\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.current = {\r\n      first: 0,\r\n      second: 0,\r\n      correct: 0,\r\n      answer: '',\r\n    }\r\n    this.stats = {\r\n      correct: 0,\r\n      total: 0,\r\n    }\r\n\r\n    this.autoFocus = false;\r\n\r\n    this.handleChanges = this.handleChanges.bind(this);\r\n    this.handleAnswer = this.handleAnswer.bind(this);\r\n    this.generateEquasion();\r\n  }\r\n\r\n  handleAnswer(event) {\r\n    if (typeof (Number(event.target.value)) === 'number') {\r\n      this.current.answer = Number(event.target.value);\r\n      this.setState({\r\n        [event.target.name]: this.current.answer\r\n      })\r\n    } else {\r\n      this.setState({\r\n        [event.target.name]: ''\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  handleChanges(event) {\r\n    const NAME = event.target.name;\r\n    const VALUE = event.target.value;\r\n    const TYPE = event.target.type;\r\n\r\n    switch (TYPE) {\r\n      case 'number':\r\n        this.setState({\r\n          [NAME]: Number(VALUE)\r\n        })\r\n        break;\r\n\r\n      case 'button':\r\n        switch (NAME) {\r\n          case 'load':\r\n            this.setState({\r\n              [NAME]: VALUE,\r\n            });\r\n            this.props.statsUpd(this.stats);\r\n            this.props.handleChanges(event);\r\n            break;\r\n\r\n          case 'answer':\r\n            if (this.check()) {\r\n              this.setState({\r\n                total: this.stats.total,\r\n                correct: this.stats.correct,\r\n                current: '',\r\n                autoFocus: true,\r\n              });\r\n              this.generateEquasion();\r\n            }\r\n\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  check() {\r\n    if (typeof (this.current.answer) === 'number') {\r\n      if (this.current.answer === this.current.correct) {\r\n        this.stats.correct++;\r\n      }\r\n      this.current.answer = '';\r\n      this.stats.total++;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  generateEquasion() {\r\n    switch (this.state.operator) {\r\n      case 'sum':\r\n        this.current.first =\r\n          Math.floor(Math.random() * (Math.pow(10, this.state.first)));\r\n        this.current.second =\r\n          Math.floor(Math.random() * (Math.pow(10, this.state.second)));\r\n        this.current.correct = this.current.first + this.current.second;\r\n        break;\r\n      case 'decr':\r\n        this.current.first =\r\n          Math.floor(Math.random() * (Math.pow(10, this.state.first)));\r\n        this.current.second =\r\n          Math.floor(Math.random() * (Math.pow(10, this.state.second)));\r\n        if (this.current.first < this.current.second) {\r\n          let temp = this.current.first;\r\n          this.current.first = this.current.second;\r\n          this.current.second = temp;\r\n        }\r\n        this.current.correct = this.current.first - this.current.second;\r\n        break;\r\n      case 'mul':\r\n        if (this.state.second >= 2) {\r\n          this.current.first =\r\n            Math.floor(Math.random() * (Math.pow(10, this.state.first)));\r\n          this.current.second =\r\n            Math.floor(Math.random() * (Math.pow(10, this.state.second)));\r\n          this.current.correct = this.current.first * this.current.second;\r\n        } else {\r\n          this.current.first =\r\n            Math.floor(Math.random() * (Math.pow(10, 1)));\r\n          this.current.second = this.state.factor;\r\n          this.current.correct = this.current.first * this.current.second;\r\n        }\r\n\r\n        console.log(this.current.correct)\r\n        break;\r\n      case 'frac':\r\n        do {\r\n          this.current.first =\r\n            Math.floor(Math.random() * (Math.pow(10, this.state.first)));\r\n          this.current.second =\r\n            Math.floor(Math.random() * (Math.pow(10, this.state.second)));\r\n          if (this.current.first < this.current.second) {\r\n            let temp = this.current.first;\r\n            this.current.first = this.current.second;\r\n            this.current.second = temp;\r\n          }\r\n          if (this.current.second === 0) { this.current.second++ }\r\n        } while (!(this.current.first % this.current.second === 0));\r\n        this.current.correct = this.current.first / this.current.second;\r\n        break;\r\n    }\r\n    console.log(this.current.first + this.sym\r\n      + this.current.second + '='\r\n      + this.current.correct);\r\n  }\r\n\r\n\r\n  render() {\r\n    let finish;\r\n    if (this.state.total >= this.state.solveToFinish) {\r\n      finish = (\r\n        <button\r\n          className=''\r\n          type='button'\r\n          onClick={this.handleChanges}\r\n          name='load'\r\n          value='stats'>\r\n          Завершить\r\n        </button>\r\n      );\r\n    } else {\r\n      finish = (\r\n        <button\r\n          className='gray'\r\n          type='button'\r\n          name='load'\r\n          value='stats'>\r\n          {this.stats.total + 1} из {this.state.solveToFinish}\r\n        </button>\r\n      );\r\n    }\r\n    return (\r\n      <div className='Exercise container'>\r\n        <div className='content'>\r\n          <div className='container'>\r\n            <div>\r\n              <span>{this.current.first}</span>\r\n              <span>{this.sym}</span>\r\n              <span>{this.current.second}</span>\r\n              <span>=</span>\r\n              <input\r\n                type='number'\r\n                pattern='^[0-9]+$'\r\n                name='current'\r\n                placeholder='Ответ'\r\n                value={this.state.current}\r\n                onChange={this.handleAnswer}\r\n                autoFocus={this.state.autoFocus}\r\n              />\r\n            </div>\r\n          </div>\r\n          <button\r\n            className=''\r\n            type='button'\r\n            name='answer'\r\n            onClick={this.handleChanges}\r\n          >\r\n            Следующий\r\n          </button>\r\n          {finish}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Exercise;","import React from 'react';\r\nimport './Stats.css';\r\nclass Stats extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      load: undefined,\r\n      //operator: props.operator,\r\n      //factor: props.factor ? props.factor : 2,\r\n      //first: props.first ? props.first : 2,\r\n      //second: props.second ? props.second : 1,\r\n      correct: props.correct ? props.correct : 0,\r\n      total: props.total ? props.total : 0,\r\n    }\r\n    this.handleChanges = this.handleChanges.bind(this);\r\n  }\r\n\r\n  handleChanges(event) {\r\n    const NAME = event.target.name;\r\n    const VALUE = event.target.value;\r\n    const TYPE = event.target.type;\r\n\r\n    switch (TYPE) {\r\n      case 'range':\r\n        this.setState({\r\n          [NAME]: Number(VALUE)\r\n        })\r\n        break;\r\n\r\n      case 'button':\r\n        this.setState({\r\n          [NAME]: VALUE\r\n        })\r\n        break;\r\n\r\n      case 'select-one':\r\n        this.setState({\r\n          [NAME]: VALUE\r\n        })\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.props.handleChanges(event);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n        <div className='Stats content'>\r\n          <div >\r\n            <span className=''>\r\n              Верно\r\n          </span>\r\n            <span className=''>\r\n              {this.state.correct}\r\n            </span>\r\n          </div>\r\n          <div className=''>\r\n            <span className=''>\r\n              Всего\r\n          </span>\r\n            <span className=''>\r\n              {this.state.total}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className='content'\r\n          type='button'\r\n          onClick={this.handleChanges}\r\n          name='load'\r\n          value='greet'>\r\n          В начало\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Stats;","import React from 'react';\r\nimport './Popup.css';\r\nclass Usage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      load: props.load ? props.load : 'greet',\r\n    };\r\n    this.onClick = this.popupToggle.bind(this);\r\n    this.greetUsage = (\r\n      <div>\r\n        <div className='text__section'>\r\n          <span className='text__sectiontitle'>Выбор оператора</span>\r\n          <div className='text__subsection'>\r\n            <div className='text__par'>\r\n              <p>В прямоугольнике под кнопкой \"Старт\" можно выбрать небходимый оператор.</p>\r\n              <p>Доступны: сложение, вычитание, умножение, деление. Числа генерируются псевдослучайным образом, но по определенным правилам.</p>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='text__section'>\r\n          <span className='text__sectiontitle'>Генерация выражения</span>\r\n          <div className='text__subsection'>\r\n            <div className='text__par'>\r\n              <p>Первые два поля <b>всегда</b> отвечают за число разрядов для членов выражения, т.е. у <i>первого</i> элемента будет число разрядов равное числу в <i>первом</i> поле, аналогично для второго. Далее будет описано особое поведение этих полей.</p>\r\n            </div>\r\n          </div>\r\n          <div className='text__subsection'>\r\n            <span className='text__subtitle'>Сложение</span>\r\n            <div className='text__par'>\r\n              <p>Все было описано выше, никакого особого поведения нет.</p>\r\n            </div>\r\n          </div>\r\n          <div className='text__subsection'>\r\n            <span className='text__subtitle'>Вычитание</span>\r\n            <div className='text__par'>\r\n              <p>Числа генерируются так, что <i>второй</i> член выражения будет <b>всегда</b> меньше <i>первого</i> (даже если число разрядов для <i>второго</i> члена будет указано больше, чем для <i>первого</i>).</p>\r\n            </div>\r\n          </div>\r\n          <div className='text__subsection'>\r\n            <span className='text__subtitle'>Умножение</span>\r\n            <div className='text__par'>\r\n              <p>При выборе этого оператора ображаются <b>три</b> поля ввода. Поля ввода числа разрядов и поле для ввода множителя.</p>\r\n              <p>Однако, при указании во <i>втором</i> поле значения \"<b>1</b>\", <i>второй множитель</i> <b>всегда</b> будет равен значению в поле \"Множитель\", а <i>первый множитель</i> будет <b>всегда</b> иметь <b>один</b> разряд.</p>\r\n            </div>\r\n          </div>\r\n          <div className='text__subsection'>\r\n            <span className='text__subtitle'>Деление</span>\r\n            <div className='text__par'>\r\n              <p>Числа генерируются так, что <i>делимое</i> <b>всегда</b> будет делиться <b>нацело</b>, а <i>делитель</i> <b>никогда</b> не будет равен 0.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <p>Теперь вы готовы упражняться, смело жмите кнопку \"Старт\".</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  popupToggle(event) {\r\n    // const CN = event.currentTarget;\r\n    // CN.classList.toggle('closing');\r\n    this.props.onClick(event);\r\n  }\r\n\r\n  render() {\r\n    const LOAD = this.state.load;\r\n    let usage;\r\n    switch (LOAD) {\r\n      case 'greet':\r\n        usage = this.greetUsage;\r\n    }\r\n    return (\r\n      <div className='popup' name='usage' onClick={this.onClick}>\r\n        <div className='popup__container'>\r\n          <div className='popup__content'>\r\n            <div className='text'>\r\n              <span className='text__title'>Использование</span>\r\n              <p><i>Убедительная просьба дочитать это руководство <b>до конца</b>, особенно если вы читаете его в первый раз. Взависимости от того на какой странице Вы находитесь будет меняться содержание этого руководства. Также просьба заглядывать в DevLog, прежде чем ругаться о недочетач и т.п., возможно они уже в процессе исправления.</i></p>\r\n              {usage}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Usage;\r\n","import React from 'react';\r\nimport './Popup.css';\r\nclass DevLog extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         load: props.load ? props.load : 'greet',\r\n      }\r\n      this.lastUpdated = '10.11.2020';\r\n      this.onClick = this.popupToggle.bind(this);\r\n      this.content = (\r\n         <div className=''>\r\n            <div className=''>\r\n               <div className='text__section'>\r\n                  <span className='text__sectiontitle'>Известные баги, недороботки недочеты</span>\r\n                  <div className='text__subsection'>\r\n                     <div className='text__par'>\r\n                        <li className=''>В некоторых случаях число генерируется неправильно и выдает 100-значное число. Лечится перезагрузкой, было замечено только на телефонах.</li>\r\n                        <li>Не отображает верен или нет ответ.</li>\r\n                        <li className='red'>Нет списка нерешенных примеров. Ну или хотя бы списка всех примеров.</li>\r\n                        <li>Внешний вид примеров и статистики вообще в нуле.</li>\r\n                        <li>При горизонтальном повороте телефона кнопки \"Помощь\" и \"DevLog\" прячутся за остальные.</li>\r\n                        <li className='red'>Наверное стоит переписать \"Помощь\".</li>\r\n                        <li>Пустая \"Помощь\" для статистики и упражнения.</li>\r\n                        <li>Не хватает картинок.</li>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               <div className='text__section'>\r\n                  <span className='text__sectiontitle'>Изменения</span>\r\n                  <div className='text__subsection'>\r\n                     <span className='text__subtitle'>Добавлено</span>\r\n                     <div className='text__par'>\r\n                        <li>Защита от ввода текста</li>\r\n                        <li>Ну собственно этот раздел.</li>\r\n                        <li>Помощь.</li>\r\n                        <li>Анимации.</li>\r\n                        <li>Выделения цветом.</li>\r\n                        <li className='green'>Проверка ввода.</li>\r\n                        <li>Минимальное количество примеров для завершения и отображения количества.</li>\r\n                     </div>\r\n                  </div>\r\n                  <div className='text__subsection'>\r\n                     <span className='text__subtitle'>Изменено</span>\r\n                     <div className='text__par'>\r\n                        <li className='green'>Обнуление поля ответа.</li>\r\n                        <li>Внешний вид главного меню.</li>\r\n                        <li>Внешний вид некоторых элементов.</li>\r\n                        <li>Проверка ввода. Больше нельзя ответить на первый и нажимать \"Следующий\"</li> \r\n                        <li>Не знаю стоит ли писать о внутренних изменениях, но они были. :D</li>\r\n                        <li className='green'>Теперь при переходе к упражнению модальное окно как и положено прячется.</li>\r\n                        <li className='green'>При выборе <b>любого</b> оператора подписи не пропадают.</li>\r\n                        <li>Подписи к полям ввода.</li>\r\n                     </div>\r\n                  </div>\r\n                  <div className='text__subsection'>\r\n                     <span className='text__subtitle'>Убрано</span>\r\n                     <div className='text__par'>\r\n                        <li>Пока ничего.</li>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               <div className='text__section'>\r\n                  <span className='text__sectiontitle'>Планы</span>\r\n                  <div className='text__subsection'>\r\n                     <span className='text__subtitle'>Добавить</span>\r\n                     <div className='text__par'>\r\n                        <p>УХХХХХ.... ПОГНАЛИ!</p>\r\n                        <li>Список неправильных ответов. Ну или вообще список ответов.</li>\r\n                        <li>Отображение корректности ответа. Хотя, возможно, оно и не надо вовсе, если выводить номер и список ответов.</li>\r\n                        <li>\"Помощь\" для упражнений и статистики.</li>\r\n                     </div>\r\n                  </div>\r\n                  <div className='text__subsection'>\r\n                     <span className='text__subtitle'>Изменить</span>\r\n                     <div className='text__par'>\r\n                        <li>Внешний вид главного меню для мобильных.</li>\r\n                        <li>Внешний вид статистики и упражнений.</li>\r\n                        <li>Внешний вид некоторых элементов.</li>\r\n                     </div>\r\n                  </div>\r\n                  <div className='text__subsection'>\r\n                     <span className='text__subtitle'>Убрать</span>\r\n                     <div className='text__par'>\r\n                        <li>Пока ничего. Но, уверен, найдется.</li>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               <div className='text__section'>\r\n                  <span className='text__sectiontitle'>Связь</span>\r\n                  <p>Пока что связь осуществляется через <a className='gray' type='link' href='https://vk.com/cxii112'>Вконтакте</a>. Прошу прикреплять снимки экрана с недочетами, ошибками и пр. или подробно описывать недоработки. Желательно подробно рассказать о действиях, которые были совершены перед тем, как появилась ошибка (возможно они и не связаны).</p>\r\n                  <p></p>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n\r\n   popupToggle(event) {\r\n      // const CN = event.currentTarget;\r\n      // CN.classList.toggle('closing');\r\n      this.props.onClick(event);\r\n   }\r\n\r\n   render() {\r\n      const LOAD = this.state.load;\r\n      let devLog;\r\n      switch (LOAD) {\r\n         case 'greet':\r\n            devLog = this.content;\r\n      }\r\n      return (\r\n         <div className='popup' name='devLog' onClick={this.onClick}>\r\n            <div className='popup__container'>\r\n               <div className='popup__content'>\r\n                  <div className='text'>\r\n                     <span className='text__title'>DevLog</span>\r\n                     <p>Здесь будет размещаться информация о ходе разработки и пр.</p>\r\n                     {devLog}\r\n                     <p>Обновено <span className='gray'>{this.lastUpdated}</span></p>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default DevLog;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Greet from './Greet/Greet';\r\nimport Exercise from './Exercise/Exercise';\r\nimport Stats from './Stats/Stats';\r\nimport Usage from './Popups/Usage';\r\nimport DevLog from './Popups/DevLog';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      load: props.load ? props.load : 'greet',\r\n      usage: false,\r\n      devLog: false,\r\n      operator: 'sum',\r\n      solveToFinish: props.status === 'dev' ? 3 : 10,\r\n      factor: props.factor ? props.factor : 5,\r\n      first: props.first ? props.first : 1,\r\n      second: props.second ? props.second : 1,\r\n      correct: props.correct ? props.correct : 0,\r\n      total: props.total ? props.total : 0,\r\n    }\r\n\r\n    this.maxs = {\r\n      first: 3,\r\n      second: 3,\r\n      factor: 9,\r\n    }\r\n\r\n    this.handleChanges = this.handleChanges.bind(this);\r\n    this.statsUpd = this.statsUpd.bind(this);\r\n    this.popupToggle = this.popupToggle.bind(this);\r\n    //this.statsUpd = this.statsUpd.bind(this);\r\n    this.options = (\r\n      <div className='options'>\r\n        <button\r\n          type='button'\r\n          name='devLog'\r\n          //value='true'\r\n          onClick={this.handleChanges}>\r\n          DevLog\r\n        </button>\r\n        <button\r\n          type='button'\r\n          name='usage'\r\n          //value='true'\r\n          onClick={this.handleChanges}>\r\n          Помощь\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  statsUpd(newStats) {\r\n    this.setState({\r\n      total: newStats.total,\r\n      correct: newStats.correct,\r\n    })\r\n  }\r\n\r\n  popupToggle(event) {\r\n    // const CN = event.currentTarget;\r\n    // CN.classList.toggle('open');\r\n    console.log(`popup ${event.target.name}`)\r\n    const NAME = event.target.name;\r\n    if (this.state.usage) {\r\n      this.setState({\r\n        usage: !this.state.usage\r\n      });\r\n    }\r\n    if (this.state.devLog) {\r\n      this.setState({\r\n        devLog: !this.state.devLog\r\n      });\r\n    }\r\n    // switch (NAME) {\r\n    //   case 'usage':\r\n    //     this.setState({\r\n    //       usage: !this.state.usage\r\n    //     });\r\n    //     break;\r\n    //   case 'devLog':\r\n    //     this.setState({\r\n    //       devLog: !this.state.devLog\r\n    //     });\r\n    //     break;\r\n\r\n    //   default:\r\n    //     break;\r\n    //};\r\n  }\r\n\r\n  handleChanges(event) {\r\n    const NAME = event.target.name;\r\n    //const VALUE = event.target.value;\r\n    const TYPE = event.target.type;\r\n    //console.log(TYPE);\r\n    let value = event.target.value;\r\n\r\n    switch (TYPE) {\r\n      case 'number':\r\n        switch (NAME) {\r\n          case 'first':\r\n            if (Number(value) > this.maxs.first) {\r\n              value = this.maxs.first;\r\n            }\r\n            break;\r\n          case 'second':\r\n            if (Number(value) > this.maxs.first) {\r\n              value = this.maxs.second;\r\n            }\r\n            break;\r\n          case 'factor':\r\n            if (Number(value) > this.maxs.first) {\r\n              value = this.maxs.factor;\r\n            }\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n        this.setState({\r\n          [NAME]: Number(value)\r\n        })\r\n        break;\r\n\r\n      case 'button':\r\n        switch (NAME) {\r\n          case 'usage':\r\n            this.setState({\r\n              usage: !this.state.usage\r\n            })\r\n            break;\r\n          case 'devLog':\r\n            this.setState({\r\n              devLog: true\r\n            })\r\n            break;\r\n          default:\r\n            this.setState({\r\n              [NAME]: value\r\n            })\r\n            break;\r\n        }\r\n        break;\r\n\r\n      case 'select-one':\r\n        this.setState({\r\n          [NAME]: value\r\n        })\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const OPERATOR = this.state.operator;\r\n    const LIMITS = this.state.limits;\r\n    const OPTIONS = this.options;\r\n    let load;\r\n    let usage;\r\n    let devLog;\r\n\r\n    if (this.state.usage) {\r\n      usage = (<Usage onClick={this.popupToggle} />);\r\n    }\r\n    if (this.state.devLog) {\r\n      devLog = (<DevLog onClick={this.popupToggle} />);\r\n    }\r\n\r\n    switch (this.state.load) {\r\n      case 'exercise':\r\n        load = (\r\n          <Exercise\r\n            operator={this.state.operator}\r\n            factor={this.state.factor}\r\n            first={this.state.first}\r\n            second={this.state.second}\r\n            solveToFinish={this.state.solveToFinish}\r\n            handleChanges={this.handleChanges}\r\n            statsUpd={this.statsUpd} />\r\n        )\r\n        break;\r\n\r\n      case 'stats':\r\n        load = (\r\n          <Stats\r\n            //operator={this.state.operator}\r\n            correct={this.state.correct}\r\n            total={this.state.total}\r\n            handleChanges={this.handleChanges} />\r\n        )\r\n        break;\r\n\r\n      default:\r\n        load = (<Greet\r\n          operator={this.state.operator}\r\n          factor={this.state.factor}\r\n          first={this.state.first}\r\n          second={this.state.second}\r\n          handleChanges={this.handleChanges} />)\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div className='container'>\r\n        {/* <div className='options'>\r\n          <button\r\n            type='button'\r\n            name='devLog'\r\n            value='true'\r\n            onClick={this.popupToggle}>\r\n            DevLog\r\n        </button>\r\n          <button\r\n            type='button'\r\n            name='usage'\r\n            value='true'\r\n            onClick={this.popupToggle}>\r\n            Помощь\r\n        </button>\r\n        </div> */}\r\n        {OPTIONS}\r\n        <div className='content'>\r\n          <div className='App'>\r\n            {load}\r\n          </div>\r\n        </div>\r\n        {usage}\r\n        {devLog}\r\n      </div>);\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App load='greet' status=''/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}