{"version":3,"sources":["Greet/Greet.js","Exercise/Exercise.js","Stats/Stats.js","Popups/Usage.js","Popups/DevLog.js","App.js","reportWebVitals.js","index.js"],"names":["Greet","props","state","operator","factor","first","second","titles","texts","sum","decr","mul","frac","mins","maxs","handleChanges","bind","inputHandle","console","log","this","result","limitFirst","className","type","name","value","onClick","pattern","readOnly","limitSecond","limitFactor","event","target","NAME","TYPE","Number","setState","OPERATOR","changeTitles","LIMITS_INPUT","limitsRender","onChange","React","Component","Exercise","load","undefined","solveToFinish","current","autoFocus","correct","total","sym","answer","stats","equasions","handleAnswer","generateEquasion","VALUE","statsUpd","handleEquasions","check","push","Math","floor","random","pow","temp","finish","placeholder","Stats","slice","eq","eqList","map","elem","index","EQUASIONS","equasionsParse","Usage","popupToggle","greetUsage","usage","DevLog","getData","JSON","parse","stringify","JSONdata","bugsAndIssues","changes","plans","bugsAndIssuesList","content","colorise","body","date","day","month","year","addedList","added","changedList","changed","deletedList","deleted","addList","add","changeList","change","deleteList","delete","lastUpdated","title","href","devLog","App","status","options","newStats","array","limits","OPTIONS","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.370e175e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Greet.css'\r\n\r\nclass Greet extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      operator: props.operator,\r\n      factor: props.factor ? props.factor : 2,\r\n      first: props.first ? props.first : 2,\r\n      second: props.second ? props.second : 1,\r\n    }\r\n    this.titles = {\r\n      first: '###',\r\n      second: '###',\r\n      factor: 'Множитель',\r\n    }\r\n\r\n    this.texts = {\r\n      sum: {\r\n        first: '1-м слагаемом',\r\n        second: '2-м слагаемом',\r\n      },\r\n      decr: {\r\n        first: 'уменьшаемом',\r\n        second: 'вычитаемом',\r\n      },\r\n      mul: {\r\n        first: '1-м множителе',\r\n        second: '2-м множителе',\r\n      },\r\n      frac: {\r\n        first: 'делимом',\r\n        second: 'делителе',\r\n      },\r\n    }\r\n\r\n    this.mins = {\r\n      first: 1,\r\n      second: 1,\r\n      factor: 2,\r\n    }\r\n    this.maxs = {\r\n      first: 3,\r\n      second: 3,\r\n      factor: 9,\r\n    }\r\n\r\n    this.handleChanges = this.handleChanges.bind(this);\r\n    this.inputHandle = this.inputHandle.bind(this);\r\n  }\r\n\r\n  changeTitles(operator) {\r\n    console.log('titles ' + operator);\r\n    console.log(this.texts);\r\n    switch (operator) {\r\n      case 'mul':\r\n        this.titles.first = this.texts.mul.first;\r\n        this.titles.second = this.texts.mul.second;\r\n        break;\r\n      case 'frac':\r\n        this.titles.first = this.texts.frac.first;\r\n        this.titles.second = this.texts.frac.second;\r\n        break;\r\n      case 'sum':\r\n        this.titles.first = this.texts.sum.first;\r\n        this.titles.second = this.texts.sum.second;\r\n        break;\r\n      case 'decr':\r\n        this.titles.first = this.texts.decr.first;\r\n        this.titles.second = this.texts.decr.second;\r\n        break;\r\n    }\r\n    console.log(this.titles);\r\n  }\r\n\r\n  limitsRender(operator) {\r\n    let result;\r\n    let limitFirst = (\r\n      <div className='number'>\r\n        <span className='number__title'>\r\n          {this.titles.first}\r\n        </span>\r\n        <span className='number__input'>\r\n          <button\r\n            type='button'\r\n            className='number__minus'\r\n            name='first'\r\n            value='minus'\r\n            onClick={this.handleChanges} >\r\n            -\r\n          </button>\r\n          <input\r\n            className='number__display'\r\n            name='fisrt'\r\n            type='text'\r\n            pattern='^[0-9]+$'\r\n            value={this.state.first}\r\n            readOnly={true}\r\n          />\r\n          <button\r\n            type='button'\r\n            className='number__minus'\r\n            name='first'\r\n            value='plus'\r\n            onClick={this.handleChanges} >\r\n            +\r\n          </button>\r\n        </span>\r\n      </div>\r\n    );\r\n    let limitSecond = (\r\n      <div className='number'>\r\n        <span className='number__title'>\r\n          {this.titles.second}\r\n        </span>\r\n        <span className='number__input'>\r\n          <button\r\n            type='button'\r\n            className='number__minus'\r\n            name='second'\r\n            value='minus'\r\n            onClick={this.handleChanges} >\r\n            -\r\n          </button>\r\n          <input\r\n            className='number__display'\r\n            name='second'\r\n            type='text'\r\n            pattern='^[0-9]+$'\r\n            value={this.state.second}\r\n            readOnly={true}\r\n          />\r\n          <button\r\n            type='button'\r\n            className='number__minus'\r\n            name='second'\r\n            value='plus'\r\n            onClick={this.handleChanges} >\r\n            +\r\n          </button>\r\n        </span>\r\n      </div>\r\n    );\r\n    let limitFactor = (\r\n      <div className='number'>\r\n        <span className='number__title'>\r\n          {this.titles.factor}\r\n        </span>\r\n        <span className='number__input'>\r\n          <button\r\n            type='button'\r\n            className='number__minus'\r\n            name='factor'\r\n            value='minus'\r\n            onClick={this.handleChanges} >\r\n            -\r\n          </button>\r\n          <input\r\n            className='number__display'\r\n            name='factor'\r\n            type='text'\r\n            pattern='^[0-9]+$'\r\n            value={this.state.factor}\r\n            readOnly={true}\r\n          />\r\n          <button\r\n            type='button'\r\n            className='number__minus'\r\n            name='factor'\r\n            value='plus'\r\n            onClick={this.handleChanges} >\r\n            +\r\n          </button>\r\n        </span>\r\n      </div>\r\n    );\r\n    switch (operator) {\r\n      case 'mul':\r\n        result = (\r\n          <div className='container gray'>\r\n            <div className=''>\r\n              <div>Число разрядов в</div>\r\n              {limitFirst}\r\n              {limitSecond}\r\n            </div>\r\n            <div className=''>\r\n              {limitFactor}\r\n            </div>\r\n          </div>\r\n        );\r\n        break;\r\n\r\n      default:\r\n        result = (\r\n          <div className='container gray'>\r\n            <div className=''>\r\n              <div>Число разрядов в</div>\r\n              {limitFirst}\r\n              {limitSecond}\r\n            </div>\r\n          </div>\r\n        );\r\n        break;\r\n    }\r\n\r\n    return (\r\n      result\r\n    )\r\n  }\r\n\r\n  inputHandle(event) {\r\n    const NAME = event.target.name;\r\n    const TYPE = event.target.type;\r\n    const VALUE = event.target.value;\r\n\r\n  }\r\n\r\n  handleChanges(event) {\r\n    const NAME = event.target.name;\r\n    const TYPE = event.target.type;\r\n\r\n    let value = event.target.value;\r\n\r\n\r\n    console.log(NAME + ' ' + value);\r\n    switch (TYPE) {\r\n      case 'number':\r\n        switch (NAME) {\r\n          case 'first':\r\n            if (Number(value) > this.maxs.first) {\r\n              value = this.maxs.first;\r\n            }\r\n            break;\r\n          case 'second':\r\n            if (Number(value) > this.maxs.first) {\r\n              value = this.maxs.second;\r\n            }\r\n            break;\r\n          case 'factor':\r\n            if (Number(value) > this.maxs.first) {\r\n              value = this.maxs.factor;\r\n            }\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n        this.setState({\r\n          [NAME]: Number(value)\r\n        })\r\n        break;\r\n\r\n      case 'button':\r\n        switch (NAME) {\r\n          case 'factor':\r\n            switch (value) {\r\n              case 'minus':\r\n                console.log(NAME + ' ' + value);\r\n                if (this.state.factor - 1 >= this.mins.factor) {\r\n                  this.setState({\r\n                    factor: --this.state.factor\r\n                  })\r\n                }\r\n                break;\r\n              case 'plus':\r\n                console.log(NAME + ' ' + value);\r\n                if (this.state.factor + 1 <= this.maxs.factor) {\r\n                  this.setState({\r\n                    factor: ++this.state.factor\r\n                  })\r\n                }\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case 'first':\r\n            switch (value) {\r\n              case 'minus':\r\n                console.log(NAME + ' ' + value);\r\n                if (this.state.first - 1 >= this.mins.first) {\r\n                  this.setState({\r\n                    first: --this.state.first\r\n                  })\r\n                }\r\n                break;\r\n              case 'plus':\r\n                console.log(NAME + ' ' + value);\r\n                if (this.state.first + 1 <= this.maxs.first) {\r\n                  this.setState({\r\n                    first: ++this.state.first\r\n                  })\r\n                }\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case 'second':\r\n            switch (value) {\r\n              case 'minus':\r\n                console.log(NAME + ' ' + value);\r\n                if (this.state.second - 1 >= this.mins.second) {\r\n                  this.setState({\r\n                    second: --this.state.second\r\n                  })\r\n                }\r\n                break;\r\n              case 'plus':\r\n                console.log(NAME + ' ' + value);\r\n                if (this.state.second + 1 <= this.maxs.second) {\r\n                  this.setState({\r\n                    second: ++this.state.second\r\n                  })\r\n                }\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n\r\n          default:\r\n            this.setState({\r\n              [NAME]: value\r\n            });\r\n            break;\r\n        }\r\n        break;\r\n\r\n      case 'select-one':\r\n        // this.changeTitles(VALUE);\r\n        this.setState({\r\n          [NAME]: value\r\n        })\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.props.handleChanges(event);\r\n  }\r\n\r\n  render() {\r\n    const OPERATOR = this.state.operator;\r\n    this.changeTitles(OPERATOR);\r\n    //let limitsInput;\r\n    const LIMITS_INPUT = this.limitsRender(OPERATOR);\r\n\r\n\r\n    return (\r\n      <div className='Greet' >\r\n        <button\r\n          className='content'\r\n          type='button'\r\n          onClick={this.handleChanges}\r\n          name='load'\r\n          value='exercise'>\r\n          Старт\r\n        </button>\r\n        <select\r\n          value={this.state.operator}\r\n          onChange={this.handleChanges}\r\n          name='operator'\r\n          className='content'>\r\n          <option value='sum'>Сложение</option>\r\n          <option value='decr'>Вычитание</option>\r\n          <option value='mul'>Умножение</option>\r\n          <option value='frac'>Деление</option>\r\n        </select>\r\n        {LIMITS_INPUT}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Greet;\r\n","import React from 'react';\r\nimport './Exercise.css';\r\nclass Exercise extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      load: undefined,\r\n      operator: props.operator,\r\n      solveToFinish: props.solveToFinish ? props.solveToFinish : 5,\r\n      current: '',\r\n      autoFocus: false,\r\n      factor: props.factor ? props.factor : 2,\r\n      first: props.first ? props.first : 2,\r\n      second: props.second ? props.second : 1,\r\n      correct: props.correct ? props.correct : 0,\r\n      total: props.total ? props.total : 0,\r\n    }\r\n\r\n    this.sym = '';\r\n    switch (this.state.operator) {\r\n      case 'sum':\r\n        this.sym = '+'\r\n        break;\r\n      case 'decr':\r\n        this.sym = '-'\r\n        break;\r\n      case 'mul':\r\n        this.sym = '*'\r\n        break;\r\n      case 'frac':\r\n        this.sym = ':'\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.current = {\r\n      first: 0,\r\n      second: 0,\r\n      correct: 0,\r\n      answer: '',\r\n    }\r\n    this.stats = {\r\n      correct: 0,\r\n      total: 0,\r\n    }\r\n\r\n    this.equasions = [];\r\n\r\n    this.handleChanges = this.handleChanges.bind(this);\r\n    this.handleAnswer = this.handleAnswer.bind(this);\r\n    this.generateEquasion();\r\n  }\r\n\r\n  handleAnswer(event) {\r\n    if (typeof (Number(event.target.value)) === 'number') {\r\n      this.current.answer = Number(event.target.value);\r\n      this.setState({\r\n        [event.target.name]: this.current.answer\r\n      })\r\n    } else {\r\n      this.setState({\r\n        [event.target.name]: ''\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  handleChanges(event) {\r\n    const NAME = event.target.name;\r\n    const VALUE = event.target.value;\r\n    const TYPE = event.target.type;\r\n\r\n    switch (TYPE) {\r\n      case 'number':\r\n        this.setState({\r\n          [NAME]: Number(VALUE)\r\n        })\r\n        break;\r\n\r\n      case 'button':\r\n        switch (NAME) {\r\n          case 'load':\r\n            this.setState({\r\n              [NAME]: VALUE,\r\n            });\r\n            this.props.statsUpd(this.stats);\r\n            this.props.handleEquasions(this.equasions);\r\n            this.props.handleChanges(event);\r\n            break;\r\n\r\n          case 'answer':\r\n            if (this.check()) {\r\n              this.setState({\r\n                total: this.stats.total,\r\n                correct: this.stats.correct,\r\n                current: '',\r\n                autoFocus: true,\r\n              });\r\n              this.generateEquasion();\r\n            }\r\n\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  check() {\r\n    if (typeof (this.current.answer) === 'number') {\r\n      if (this.current.answer === this.current.correct) {\r\n        this.stats.correct++;\r\n      }\r\n\r\n      this.equasions.push({\r\n        first: this.current.first,\r\n        second: this.current.second,\r\n        answer: this.current.answer,\r\n        correct: this.current.correct\r\n      });\r\n\r\n      this.current.answer = '';\r\n      this.stats.total++;\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  generateEquasion() {\r\n    switch (this.state.operator) {\r\n      case 'sum':\r\n        this.current.first =\r\n          Math.floor(Math.random() * (Math.pow(10, this.state.first)));\r\n        this.current.second =\r\n          Math.floor(Math.random() * (Math.pow(10, this.state.second)));\r\n        this.current.correct = this.current.first + this.current.second;\r\n        break;\r\n      case 'decr':\r\n        this.current.first =\r\n          Math.floor(Math.random() * (Math.pow(10, this.state.first)));\r\n        this.current.second =\r\n          Math.floor(Math.random() * (Math.pow(10, this.state.second)));\r\n        if (this.current.first < this.current.second) {\r\n          let temp = this.current.first;\r\n          this.current.first = this.current.second;\r\n          this.current.second = temp;\r\n        }\r\n        this.current.correct = this.current.first - this.current.second;\r\n        break;\r\n      case 'mul':\r\n        if (this.state.second >= 2) {\r\n          this.current.first =\r\n            Math.floor(Math.random() * (Math.pow(10, this.state.first)));\r\n          this.current.second =\r\n            Math.floor(Math.random() * (Math.pow(10, this.state.second)));\r\n          this.current.correct = this.current.first * this.current.second;\r\n        } else {\r\n          this.current.first =\r\n            Math.floor(Math.random() * (Math.pow(10, 1)));\r\n          this.current.second = this.state.factor;\r\n          this.current.correct = this.current.first * this.current.second;\r\n        }\r\n\r\n        console.log(this.current.correct)\r\n        break;\r\n      case 'frac':\r\n        do {\r\n          this.current.first =\r\n            Math.floor(Math.random() * (Math.pow(10, this.state.first)));\r\n          this.current.second =\r\n            Math.floor(Math.random() * (Math.pow(10, this.state.second)));\r\n          if (this.current.first < this.current.second) {\r\n            let temp = this.current.first;\r\n            this.current.first = this.current.second;\r\n            this.current.second = temp;\r\n          }\r\n          if (this.current.second === 0) { this.current.second++ }\r\n        } while (!(this.current.first % this.current.second === 0));\r\n        this.current.correct = this.current.first / this.current.second;\r\n        break;\r\n    }\r\n    console.log(this.current.first + this.sym\r\n      + this.current.second + '='\r\n      + this.current.correct);\r\n  }\r\n\r\n\r\n  render() {\r\n    let finish;\r\n    if (this.state.total >= this.state.solveToFinish) {\r\n      finish = (\r\n        <button\r\n          className='content'\r\n          type='button'\r\n          onClick={this.handleChanges}\r\n          name='load'\r\n          value='stats'>\r\n          Завершить\r\n        </button>\r\n      );\r\n    } else {\r\n      finish = (\r\n        <button\r\n          className='gray content'\r\n          type='button'\r\n          name='load'\r\n          value='stats'>\r\n          До завершения {this.state.solveToFinish - this.stats.total}\r\n        </button>\r\n      );\r\n    }\r\n    return (\r\n      <div className='Exercise container'>\r\n        <div className='content'>\r\n          <div className='container'>\r\n            <div>\r\n              <span>{this.current.first}</span>\r\n              <span>{this.sym}</span>\r\n              <span>{this.current.second}</span>\r\n              <span>=</span>\r\n              <input\r\n                type='number'\r\n                pattern='^[0-9]+$'\r\n                name='current'\r\n                placeholder='Ответ'\r\n                value={this.state.current}\r\n                onChange={this.handleAnswer}\r\n                autoFocus={true}\r\n              //onFocusCapture={this.state.autoFocus}\r\n              />\r\n            </div>\r\n          </div>\r\n          <button\r\n            className='content'\r\n            type='button'\r\n            name='answer'\r\n            onClick={this.handleChanges}\r\n          >\r\n            Следующий\r\n          </button>\r\n          {finish}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Exercise;","import React from 'react';\r\nimport './Stats.css';\r\nclass Stats extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      load: undefined,\r\n      operator: props.operator,\r\n      //factor: props.factor ? props.factor : 2,\r\n      //first: props.first ? props.first : 2,\r\n      //second: props.second ? props.second : 1,\r\n      correct: props.correct ? props.correct : 0,\r\n      total: props.total ? props.total : 0,\r\n    }\r\n    this.equasions = this.props.equasions.slice();\r\n    this.handleChanges = this.handleChanges.bind(this);\r\n  }\r\n\r\n  equasionsParse() {\r\n    const eq = this.equasions;\r\n    let sym;\r\n    switch (this.state.operator) {\r\n      case 'sum':\r\n        sym = '+'\r\n        break;\r\n      case 'decr':\r\n        sym = '-'\r\n        break;\r\n      case 'mul':\r\n        sym = '*'\r\n        break;\r\n      case 'frac':\r\n        sym = ':'\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    const eqList = eq.map((elem, index) =>\r\n      <li key={index}\r\n        className='container'>\r\n        <div className={(elem.answer !== elem.correct) ? 'red content' : 'content'}>\r\n          {elem.first} {sym} {elem.second} = {elem.answer}\r\n        </div>\r\n        <div className={(elem.answer !== elem.correct) ? 'green content' : 'content'}>\r\n          {(elem.answer !== elem.correct) ? ('Правильно: ' + elem.correct) : ''}\r\n        </div>\r\n      </li>\r\n    );\r\n    return (\r\n      <div className='content'>\r\n        {eqList}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  handleChanges(event) {\r\n    const NAME = event.target.name;\r\n    const VALUE = event.target.value;\r\n    const TYPE = event.target.type;\r\n\r\n    switch (TYPE) {\r\n      case 'range':\r\n        this.setState({\r\n          [NAME]: Number(VALUE)\r\n        })\r\n        break;\r\n\r\n      case 'button':\r\n        this.setState({\r\n          [NAME]: VALUE\r\n        })\r\n        break;\r\n\r\n      case 'select-one':\r\n        this.setState({\r\n          [NAME]: VALUE\r\n        })\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.props.handleChanges(event);\r\n  }\r\n\r\n  render() {\r\n    console.log('stats');\r\n    console.log(this.equasions);\r\n    const EQUASIONS = this.equasionsParse();\r\n    return (\r\n      <div className='container'>\r\n        <div className='Stats'>\r\n          <div className='Stats__container'>\r\n            <div className='Stats__content'>\r\n              <div className='content'>\r\n                <div >\r\n                  <div className=''>\r\n                    Верно\r\n              <span className=''>\r\n                      {this.state.correct}\r\n                    </span>\r\n            из\r\n              <span className=''>\r\n                      {this.state.total}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=''>\r\n                {EQUASIONS}\r\n              </div>\r\n              <button\r\n                className='content'\r\n                type='button'\r\n                onClick={this.handleChanges}\r\n                name='load'\r\n                value='greet'>\r\n                В начало\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Stats;","import React from 'react';\r\nimport './Popup.css';\r\nclass Usage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      load: props.load ? props.load : 'greet',\r\n    };\r\n    this.onClick = this.popupToggle.bind(this);\r\n    this.greetUsage = (\r\n      <div>\r\n        <div className='text__section'>\r\n          <span className='text__sectiontitle'>Выбор оператора</span>\r\n          <div className='text__subsection'>\r\n            <div className='text__par'>\r\n              <p>В прямоугольнике под кнопкой \"Старт\" можно выбрать небходимый оператор.</p>\r\n              <p>Доступны: сложение, вычитание, умножение, деление. Числа генерируются псевдослучайным образом, но по определенным правилам.</p>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='text__section'>\r\n          <span className='text__sectiontitle'>Генерация выражения</span>\r\n          <div className='text__subsection'>\r\n            <div className='text__par'>\r\n              <p>Первые два поля <b>всегда</b> отвечают за число разрядов для членов выражения, т.е. у <i>первого</i> элемента будет число разрядов равное числу в <i>первом</i> поле, аналогично для второго. Далее будет описано особое поведение этих полей.</p>\r\n            </div>\r\n          </div>\r\n          <div className='text__subsection'>\r\n            <span className='text__subtitle'>Сложение</span>\r\n            <div className='text__par'>\r\n              <p>Все было описано выше, никакого особого поведения нет.</p>\r\n            </div>\r\n          </div>\r\n          <div className='text__subsection'>\r\n            <span className='text__subtitle'>Вычитание</span>\r\n            <div className='text__par'>\r\n              <p>Числа генерируются так, что <i>второй</i> член выражения будет <b>всегда</b> меньше <i>первого</i> (даже если число разрядов для <i>второго</i> члена будет указано больше, чем для <i>первого</i>).</p>\r\n            </div>\r\n          </div>\r\n          <div className='text__subsection'>\r\n            <span className='text__subtitle'>Умножение</span>\r\n            <div className='text__par'>\r\n              <p>При выборе этого оператора ображаются <b>три</b> поля ввода. Поля ввода числа разрядов и поле для ввода множителя.</p>\r\n              <p>Однако, при указании во <i>втором</i> поле значения \"<b>1</b>\", <i>второй множитель</i> <b>всегда</b> будет равен значению в поле \"Множитель\", а <i>первый множитель</i> будет <b>всегда</b> иметь <b>один</b> разряд.</p>\r\n            </div>\r\n          </div>\r\n          <div className='text__subsection'>\r\n            <span className='text__subtitle'>Деление</span>\r\n            <div className='text__par'>\r\n              <p>Числа генерируются так, что <i>делимое</i> <b>всегда</b> будет делиться <b>нацело</b>, а <i>делитель</i> <b>никогда</b> не будет равен 0.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <p>Теперь вы готовы упражняться, смело жмите кнопку \"Старт\".</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  popupToggle(event) {\r\n    // const CN = event.currentTarget;\r\n    // CN.classList.toggle('closing');\r\n    this.props.onClick(event);\r\n  }\r\n\r\n  render() {\r\n    const LOAD = this.state.load;\r\n    let usage;\r\n    switch (LOAD) {\r\n      case 'greet':\r\n        usage = this.greetUsage;\r\n    }\r\n    return (\r\n      <div className='popup' name='usage' onClick={this.onClick}>\r\n        <div className='popup__container'>\r\n          <div className='popup__content'>\r\n            <div className='text'>\r\n              <span className='text__title'>Использование</span>\r\n              <p><i>Убедительная просьба дочитать это руководство <b>до конца</b>, особенно если вы читаете его в первый раз. Взависимости от того на какой странице Вы находитесь будет меняться содержание этого руководства. Также просьба заглядывать в DevLog, прежде чем ругаться о недочетач и т.п., возможно они уже в процессе исправления.</i></p>\r\n              {usage}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Usage;\r\n","import React from 'react';\r\nimport './Popup.css';\r\nimport JSONdata from './log.json';\r\nclass DevLog extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         load: props.load ? props.load : 'greet',\r\n      }\r\n\r\n      this.getData = (() => JSON.parse(JSON.stringify(JSONdata)));\r\n      //this.data = this.getData();\r\n      this.bugsAndIssues = this.getData().bugsAndIssues;\r\n      this.changes = this.getData().changes;\r\n      this.plans = this.getData().plans;\r\n\r\n      this.bugsAndIssuesList = this.bugsAndIssues.content.map((elem, index) =>\r\n         <li key={index}\r\n            className={elem.colorise ? elem.colorise : ''}>\r\n            <span>{elem.body}</span>\r\n            <div className='date'>\r\n               ({elem.date.day}.{elem.date.month}.{elem.date.year})</div>\r\n         </li>\r\n      );\r\n      this.addedList = this.changes.added.content.map((elem, index) =>\r\n         <li key={index}\r\n            className={elem.colorise ? elem.colorise : ''}>\r\n            <span>{elem.body}</span>\r\n            <div className='date'>\r\n               ({elem.date.day}.{elem.date.month}.{elem.date.year})</div>\r\n         </li>\r\n      );\r\n      this.changedList = this.changes.changed.content.map((elem, index) =>\r\n         <li key={index}\r\n            className={elem.colorise ? elem.colorise : ''}>\r\n            <span>{elem.body}</span>\r\n            <div className='date'>\r\n               ({elem.date.day}.{elem.date.month}.{elem.date.year})</div>\r\n         </li>\r\n      );\r\n      this.deletedList = this.changes.deleted.content.map((elem, index) =>\r\n         <li key={index}\r\n            className={elem.colorise ? elem.colorise : ''}>\r\n            <span>{elem.body}</span>\r\n            <div className='date'>\r\n               ({elem.date.day}.{elem.date.month}.{elem.date.year})</div>\r\n         </li>\r\n      );\r\n      this.addList = this.plans.add.content.map((elem, index) =>\r\n         <li key={index}\r\n            className={elem.colorise ? elem.colorise : ''}>\r\n            <span>{elem.body}</span>\r\n            <div className='date'>\r\n               ({elem.date.day}.{elem.date.month}.{elem.date.year})</div>\r\n         </li>\r\n      );\r\n      this.changeList = this.plans.change.content.map((elem, index) =>\r\n         <li key={index}\r\n            className={elem.colorise ? elem.colorise : ''}>\r\n            <span>{elem.body}</span>\r\n            <div className='date'>\r\n               ({elem.date.day}.{elem.date.month}.{elem.date.year})</div>\r\n         </li>\r\n      );\r\n      this.deleteList = this.plans.delete.content.map((elem, index) =>\r\n         <li key={index}\r\n            className={elem.colorise ? elem.colorise : ''}>\r\n            <span>{elem.body}</span>\r\n            <div className='date'>\r\n               ({elem.date.day}.{elem.date.month}.{elem.date.year})</div>\r\n         </li>\r\n      );\r\n      //this.bugAndIssuesList = this.data().bugAndIssues.slice();\r\n      console.log(this.bugsAndIssues);\r\n      console.log(this.changes);\r\n      console.log(this.plans);\r\n      //console.log(this.bugAndIssuesList);\r\n      this.lastUpdated = '11.11.2020';\r\n      this.onClick = this.popupToggle.bind(this);\r\n      this.content = (\r\n         <div className=''>\r\n            <div className=''>\r\n               <div className='text__section'>\r\n                  <span className='text__sectiontitle'>{this.bugsAndIssues.title}</span>\r\n                  <div className='text__subsection'>\r\n                     <div className='text__par'>\r\n                        {this.bugsAndIssuesList}\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               <div className='text__section'>\r\n                  <span className='text__sectiontitle'>{this.changes.title}</span>\r\n                  <div className='text__subsection'>\r\n                     <span className='text__subtitle'>{this.changes.added.title}</span>\r\n                     <div className='text__par'>\r\n                        {this.addedList}\r\n                     </div>\r\n                  </div>\r\n                  <div className='text__subsection'>\r\n                     <span className='text__subtitle'>{this.changes.changed.title}</span>\r\n                     <div className='text__par'>\r\n                        {this.changedList}\r\n                     </div>\r\n                  </div>\r\n                  <div className='text__subsection'>\r\n                     <span className='text__subtitle'>{this.changes.deleted.title}</span>\r\n                     <div className='text__par'>\r\n                        {this.deletedList}\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               <div className='text__section'>\r\n                  <span className='text__sectiontitle'>{this.plans.title}</span>\r\n                  <div className='text__subsection'>\r\n                     <span className='text__subtitle'>{this.plans.add.title}</span>\r\n                     <div className='text__par'>\r\n                        {this.addList}\r\n                     </div>\r\n                  </div>\r\n                  <div className='text__subsection'>\r\n                     <span className='text__subtitle'>{this.plans.change.title}</span>\r\n                     <div className='text__par'>\r\n                        {this.changeList}\r\n                     </div>\r\n                  </div>\r\n                  <div className='text__subsection'>\r\n                     <span className='text__subtitle'>{this.plans.delete.title}</span>\r\n                     <div className='text__par'>\r\n                        {this.deleteList}\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               <div className='text__section'>\r\n                  <span className='text__sectiontitle'>Связь</span>\r\n                  <p>Пока что связь осуществляется через <a className='gray' type='link' href='https://vk.com/cxii112'>Вконтакте</a>. Прошу прикреплять снимки экрана с недочетами, ошибками и пр. или подробно описывать недоработки. Желательно подробно рассказать о действиях, которые были совершены перед тем, как появилась ошибка (возможно они и не связаны).</p>\r\n                  <p></p>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n\r\n   popupToggle(event) {\r\n      // const CN = event.currentTarget;\r\n      // CN.classList.toggle('closing');\r\n      this.props.onClick(event);\r\n   }\r\n\r\n   render() {\r\n      const LOAD = this.state.load;\r\n      let devLog;\r\n      switch (LOAD) {\r\n         case 'greet':\r\n            devLog = this.content;\r\n      }\r\n      return (\r\n         <div className='popup' name='devLog' onClick={this.onClick}>\r\n            <div className='popup__container'>\r\n               <div className='popup__content'>\r\n                  <div className='text'>\r\n                     <span className='text__title'>DevLog</span>\r\n                     <p>Здесь будет размещаться информация о ходе разработки и пр.</p>\r\n                     {devLog}\r\n                     <p>Обновено <span className='gray'>{this.lastUpdated}</span></p>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default DevLog;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Greet from './Greet/Greet';\r\nimport Exercise from './Exercise/Exercise';\r\nimport Stats from './Stats/Stats';\r\nimport Usage from './Popups/Usage';\r\nimport DevLog from './Popups/DevLog';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      load: props.load ? props.load : 'greet',\r\n      usage: false,\r\n      devLog: false,\r\n      operator: 'sum',\r\n      solveToFinish: props.status === 'dev' ? 3 : 10,\r\n      factor: props.factor ? props.factor : 5,\r\n      first: props.first ? props.first : 1,\r\n      second: props.second ? props.second : 1,\r\n      correct: props.correct ? props.correct : 0,\r\n      total: props.total ? props.total : 0,\r\n    }\r\n\r\n    this.mins = {\r\n      first: 1,\r\n      second: 1,\r\n      factor: 2,\r\n    }\r\n    this.maxs = {\r\n      first: 3,\r\n      second: 3,\r\n      factor: 9,\r\n    }\r\n\r\n    this.equasions = [];\r\n\r\n    this.handleEquasions = this.handleEquasions.bind(this);\r\n    this.handleChanges = this.handleChanges.bind(this);\r\n    this.statsUpd = this.statsUpd.bind(this);\r\n    this.popupToggle = this.popupToggle.bind(this);\r\n    //this.statsUpd = this.statsUpd.bind(this);\r\n    this.options = (\r\n      <div className='options'>\r\n        <button\r\n          type='button'\r\n          name='devLog'\r\n          value='true'\r\n          onClick={this.handleChanges}>\r\n          DevLog\r\n        </button>\r\n        <button\r\n          type='button'\r\n          name='usage'\r\n          value='true'\r\n          onClick={this.handleChanges}>\r\n          Помощь\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  statsUpd(newStats) {\r\n    this.setState({\r\n      total: newStats.total,\r\n      correct: newStats.correct,\r\n    })\r\n  }\r\n\r\n  handleEquasions(array) {\r\n    this.equasions = array.slice();\r\n  }\r\n\r\n  popupToggle(event) {\r\n    // const CN = event.currentTarget;\r\n    // CN.classList.toggle('open');\r\n    console.log(`popup ${event.target.name}`)\r\n    const NAME = event.target.name;\r\n    if (this.state.usage) {\r\n      this.setState({\r\n        usage: !this.state.usage\r\n      });\r\n    }\r\n    if (this.state.devLog) {\r\n      this.setState({\r\n        devLog: !this.state.devLog\r\n      });\r\n    }\r\n    // switch (NAME) {\r\n    //   case 'usage':\r\n    //     this.setState({\r\n    //       usage: !this.state.usage\r\n    //     });\r\n    //     break;\r\n    //   case 'devLog':\r\n    //     this.setState({\r\n    //       devLog: !this.state.devLog\r\n    //     });\r\n    //     break;\r\n\r\n    //   default:\r\n    //     break;\r\n    //};\r\n  }\r\n\r\n  handleChanges(event) {\r\n    const NAME = event.target.name;\r\n    //const VALUE = event.target.value;\r\n    const TYPE = event.target.type;\r\n    //console.log(TYPE);\r\n    let value = event.target.value;\r\n\r\n    switch (TYPE) {\r\n      case 'number':\r\n        switch (NAME) {\r\n          case 'first':\r\n            if (Number(value) > this.maxs.first) {\r\n              value = this.maxs.first;\r\n            }\r\n            break;\r\n          case 'second':\r\n            if (Number(value) > this.maxs.first) {\r\n              value = this.maxs.second;\r\n            }\r\n            break;\r\n          case 'factor':\r\n            if (Number(value) > this.maxs.first) {\r\n              value = this.maxs.factor;\r\n            }\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n        this.setState({\r\n          [NAME]: Number(value)\r\n        })\r\n        break;\r\n\r\n      case 'button':\r\n        switch (NAME) {\r\n          case 'factor':\r\n            switch (value) {\r\n              case 'minus':\r\n                console.log(NAME + ' ' + value);\r\n                if (this.state.factor - 1 >= this.mins.factor) {\r\n                  this.setState({\r\n                    factor: --this.state.factor\r\n                  })\r\n                }\r\n                break;\r\n              case 'plus':\r\n                console.log(NAME + ' ' + value);\r\n                if (this.state.factor + 1 <= this.maxs.factor) {\r\n                  this.setState({\r\n                    factor: ++this.state.factor\r\n                  })\r\n                }\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case 'first':\r\n            switch (value) {\r\n              case 'minus':\r\n                console.log(NAME + ' ' + value);\r\n                if (this.state.first - 1 >= this.mins.first) {\r\n                  this.setState({\r\n                    first: --this.state.first\r\n                  })\r\n                }\r\n                break;\r\n              case 'plus':\r\n                console.log(NAME + ' ' + value);\r\n                if (this.state.first + 1 <= this.maxs.first) {\r\n                  this.setState({\r\n                    first: ++this.state.first\r\n                  })\r\n                }\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case 'second':\r\n            switch (value) {\r\n              case 'minus':\r\n                console.log(NAME + ' ' + value);\r\n                if (this.state.second - 1 >= this.mins.second) {\r\n                  this.setState({\r\n                    second: --this.state.second\r\n                  })\r\n                }\r\n                break;\r\n              case 'plus':\r\n                console.log(NAME + ' ' + value);\r\n                if (this.state.second + 1 <= this.maxs.second) {\r\n                  this.setState({\r\n                    second: ++this.state.second\r\n                  })\r\n                }\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n\r\n          default:\r\n            this.setState({\r\n              [NAME]: value\r\n            });\r\n            break;\r\n        }\r\n        break;\r\n\r\n      case 'select-one':\r\n        // this.changeTitles(VALUE);\r\n        this.setState({\r\n          [NAME]: value\r\n        })\r\n        break;\r\n      default:\r\n        break;\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const OPERATOR = this.state.operator;\r\n    const LIMITS = this.state.limits;\r\n    const OPTIONS = this.options;\r\n    let load;\r\n    let usage;\r\n    let devLog;\r\n\r\n    if (this.state.usage) {\r\n      usage = (<Usage onClick={this.popupToggle} />);\r\n    }\r\n    if (this.state.devLog) {\r\n      devLog = (<DevLog onClick={this.popupToggle} />);\r\n    }\r\n\r\n    switch (this.state.load) {\r\n      case 'exercise':\r\n        load = (\r\n          <Exercise\r\n            operator={this.state.operator}\r\n            factor={this.state.factor}\r\n            first={this.state.first}\r\n            second={this.state.second}\r\n            solveToFinish={this.state.solveToFinish}\r\n            handleChanges={this.handleChanges}\r\n            statsUpd={this.statsUpd}\r\n            handleEquasions={this.handleEquasions} />\r\n        )\r\n        break;\r\n\r\n      case 'stats':\r\n        load = (\r\n          <Stats\r\n            operator={this.state.operator}\r\n            correct={this.state.correct}\r\n            total={this.state.total}\r\n            handleChanges={this.handleChanges}\r\n            equasions={this.equasions} />\r\n        )\r\n        break;\r\n\r\n      default:\r\n        load = (<Greet\r\n          operator={this.state.operator}\r\n          factor={this.state.factor}\r\n          first={this.state.first}\r\n          second={this.state.second}\r\n          handleChanges={this.handleChanges} />)\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div className='container'>\r\n        {OPTIONS}\r\n        <div className='content'>\r\n          <div className='App'>\r\n            {load}\r\n          </div>\r\n        </div>\r\n        {usage}\r\n        {devLog}\r\n      </div>);\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App load='greet' status=''/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}