{"version":3,"sources":["Greet/Greet.js","Exercise/Exercise.js","Stats/Stats.js","Popups/Usage.js","Popups/DevLog.js","App.js","reportWebVitals.js","index.js"],"names":["Greet","props","state","operator","factor","first","second","titles","mins","maxs","handleChanges","bind","event","NAME","target","name","VALUE","value","type","this","setState","Number","limitsInput","className","min","max","step","onChange","onClick","React","Component","Exercise","load","undefined","correct","total","sym","current","stats","handleAnswer","generateEquasion","answer","statsUpd","check","Math","floor","random","pow","temp","console","log","placeholder","Stats","Usage","popupToggle","greetUsage","usage","DevLog","lastUpdated","content","href","devLog","App","options","newStats","limits","OPTIONS","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.580bd1e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Greet.css'\r\n\r\nclass Greet extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      operator: props.operator,\r\n      factor: props.factor ? props.factor : 2,\r\n      first: props.first ? props.first : 2,\r\n      second: props.second ? props.second : 1,\r\n    }\r\n    this.titles = {\r\n      first: 'В 1-м элементе',\r\n      second: 'Во 2-м элементе',\r\n      factor: 'Множитель',\r\n    }\r\n    this.mins = {\r\n      first: 1,\r\n      second: 1,\r\n      factor: 2,\r\n    }\r\n    this.maxs = {\r\n      first: 3,\r\n      second: 3,\r\n      factor: 9,\r\n    }\r\n    this.handleChanges = this.handleChanges.bind(this);\r\n  }\r\n\r\n  handleChanges(event) {\r\n    const NAME = event.target.name;\r\n    const VALUE = event.target.value;\r\n    const TYPE = event.target.type;\r\n\r\n    switch (TYPE) {\r\n      case 'number':\r\n        this.setState({\r\n          [NAME]: Number(VALUE)\r\n        })\r\n        break;\r\n\r\n      case 'button':\r\n        this.setState({\r\n          [NAME]: VALUE\r\n        })\r\n        break;\r\n\r\n      case 'select-one':\r\n        this.setState({\r\n          [NAME]: VALUE\r\n        })\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.props.handleChanges(event);\r\n  }\r\n\r\n  render() {\r\n    let limitsInput;\r\n    switch (this.state.operator) {\r\n      case 'mul':\r\n        limitsInput = (\r\n          <div className='container gray'>\r\n            <div className=''>\r\n              <div>Число разрядов</div>\r\n              <div className='number'>\r\n                <span className='number__title'>\r\n                  {this.titles.first}\r\n                </span>\r\n                <input\r\n                  className='number__input'\r\n                  type='number'\r\n                  name='first'\r\n                  min={this.mins.first}\r\n                  max={this.maxs.first}\r\n                  value={this.state.first}\r\n                  step='1'\r\n                  onChange={this.handleChanges} />\r\n              </div>\r\n              <div className='number'>\r\n                <span className='number__title'>\r\n                  {this.titles.second}\r\n                </span>\r\n                <input\r\n                  className='number__input'\r\n                  type='number'\r\n                  name='second'\r\n                  min={this.mins.second}\r\n                  max={this.maxs.second}\r\n                  value={this.state.second}\r\n                  step='1'\r\n                  onChange={this.handleChanges} />\r\n              </div>\r\n            </div>\r\n            <div className=''>\r\n              <div className='number'>\r\n                <span className='number__title'>\r\n                  {this.titles.factor}\r\n                </span>\r\n                <input\r\n                  className='number__input'\r\n                  type='number'\r\n                  name='factor'\r\n                  min={this.mins.factor}\r\n                  max={this.maxs.factor}\r\n                  value={this.state.factor}\r\n                  step='1'\r\n                  onChange={this.handleChanges} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n        break;\r\n      default:\r\n        limitsInput = (\r\n          <div className='container gray'>\r\n            <div className=''>\r\n              <div>Число разрядов</div>\r\n              <div className='number'>\r\n                <span className='number__title'>\r\n                  {this.titles.first}\r\n                </span>\r\n                <input\r\n                  className='number__input'\r\n                  type='number'\r\n                  name='first'\r\n                  min={this.mins.first}\r\n                  max={this.maxs.first}\r\n                  value={this.state.first}\r\n                  step='1'\r\n                  onChange={this.handleChanges} />\r\n              </div>\r\n              <div className='number'>\r\n                <span className='number__title'>\r\n                  {this.titles.second}\r\n                </span>\r\n                <input\r\n                  className='number__input'\r\n                  type='number'\r\n                  name='second'\r\n                  min={this.mins.second}\r\n                  max={this.maxs.second}\r\n                  value={this.state.second}\r\n                  step='1'\r\n                  onChange={this.handleChanges} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div className='Greet container' >\r\n        <button\r\n          className='content'\r\n          type='button'\r\n          onClick={this.handleChanges}\r\n          name='load'\r\n          value='exercise'>\r\n          Старт\r\n        </button>\r\n        <select\r\n          value={this.state.operator}\r\n          onChange={this.handleChanges}\r\n          name='operator'\r\n          className='content'>\r\n          <option value='sum'>Сложение</option>\r\n          <option value='decr'>Вычитание</option>\r\n          <option value='mul'>Умножение</option>\r\n          <option value='frac'>Деление</option>\r\n        </select>\r\n        {limitsInput}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Greet;\r\n","import React from 'react';\r\nimport './Exercise.css';\r\nclass Exercise extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      load: undefined,\r\n      operator: props.operator,\r\n      factor: props.factor ? props.factor : 2,\r\n      first: props.first ? props.first : 2,\r\n      second: props.second ? props.second : 1,\r\n      correct: props.correct ? props.correct : 0,\r\n      total: props.total ? props.total : 0,\r\n    }\r\n\r\n    this.sym = '';\r\n    switch (this.state.operator) {\r\n      case 'sum':\r\n        this.sym = '+'\r\n        break;\r\n      case 'decr':\r\n        this.sym = '-'\r\n        break;\r\n      case 'mul':\r\n        this.sym = '*'\r\n        break;\r\n      case 'frac':\r\n        this.sym = ':'\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.current = {\r\n      first: 0,\r\n      second: 0,\r\n      correct: 0,\r\n    }\r\n    this.stats = {\r\n      correct: 0,\r\n      total: 0,\r\n    }\r\n    \r\n    this.handleChanges = this.handleChanges.bind(this);\r\n    this.handleAnswer = this.handleAnswer.bind(this);\r\n    this.generateEquasion();\r\n  }\r\n\r\n  handleAnswer(event) {\r\n    this.current.answer = Number(event.target.value);\r\n  }\r\n\r\n  handleChanges(event) {\r\n    const NAME = event.target.name;\r\n    const VALUE = event.target.value;\r\n    const TYPE = event.target.type;\r\n\r\n    switch (TYPE) {\r\n      case 'number':\r\n        this.setState({\r\n          [NAME]: Number(VALUE)\r\n        })\r\n        break;\r\n\r\n      case 'button':\r\n        switch (NAME) {\r\n          case 'load':\r\n            this.setState({\r\n              [NAME]: VALUE,\r\n            });\r\n            this.props.statsUpd(this.stats);\r\n            this.props.handleChanges(event);\r\n            break;\r\n\r\n          case 'answer':\r\n            this.check();\r\n            this.setState({\r\n              total: this.stats.total,\r\n              correct: this.stats.correct,\r\n            });\r\n            this.generateEquasion();\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  check() {\r\n    if (this.current.answer === this.current.correct) {\r\n      this.stats.correct++;\r\n    }\r\n    this.stats.total++;\r\n  }\r\n\r\n  generateEquasion() {\r\n    switch (this.state.operator) {\r\n      case 'sum':\r\n        this.current.first =\r\n          Math.floor(Math.random() * (Math.pow(10, this.state.first)));\r\n        this.current.second =\r\n          Math.floor(Math.random() * (Math.pow(10, this.state.second)));\r\n        this.current.correct = this.current.first + this.current.second;\r\n        break;\r\n      case 'decr':\r\n        this.current.first =\r\n          Math.floor(Math.random() * (Math.pow(10, this.state.first)));\r\n        this.current.second =\r\n          Math.floor(Math.random() * (Math.pow(10, this.state.second)));\r\n        if (this.current.first < this.current.second) {\r\n          let temp = this.current.first;\r\n          this.current.first = this.current.second;\r\n          this.current.second = temp;\r\n        }\r\n        this.current.correct = this.current.first - this.current.second;\r\n        break;\r\n      case 'mul':\r\n        if (this.state.second >= 2) {\r\n          this.current.first =\r\n            Math.floor(Math.random() * (Math.pow(10, this.state.first)));\r\n          this.current.second =\r\n            Math.floor(Math.random() * (Math.pow(10, this.state.second)));\r\n          this.current.correct = this.current.first * this.current.second;\r\n        } else {\r\n          this.current.first =\r\n            Math.floor(Math.random() * (Math.pow(10, 1)));\r\n          this.current.second = this.state.factor;\r\n          this.current.correct = this.current.first * this.current.second;\r\n        }\r\n\r\n        console.log(this.current.correct)\r\n        break;\r\n      case 'frac':\r\n        do {\r\n          this.current.first =\r\n            Math.floor(Math.random() * (Math.pow(10, this.state.first)));\r\n          this.current.second =\r\n            Math.floor(Math.random() * (Math.pow(10, this.state.second)));\r\n          if (this.current.first < this.current.second) {\r\n            let temp = this.current.first;\r\n            this.current.first = this.current.second;\r\n            this.current.second = temp;\r\n          }\r\n          if (this.current.second === 0) { this.current.second++ }\r\n        } while (!(this.current.first % this.current.second === 0));\r\n        this.current.correct = this.current.first / this.current.second;\r\n        break;\r\n    }\r\n    console.log(this.current.first + this.sym\r\n      + this.current.second + '='\r\n      + this.current.correct);\r\n  }\r\n\r\n\r\n  render() {\r\n    //this.generateEquasion();\r\n    return (\r\n      <div className='container'>\r\n        <div className='content'>\r\n          <span>{this.current.first}</span>\r\n          <span>{this.sym}</span>\r\n          <span>{this.current.second}</span>\r\n          <span>=</span>\r\n          <input\r\n            type='number'\r\n            name='current'\r\n            min='0'\r\n            placeholder='Ответ'\r\n            onChange={this.handleAnswer}\r\n          />\r\n          <button\r\n            className='content'\r\n            type='button'\r\n            name='answer'\r\n            onClick={this.handleChanges}\r\n          >\r\n            Следующий\r\n        </button>\r\n        </div>\r\n        <button\r\n          className='content'\r\n          type='button'\r\n          onClick={this.handleChanges}\r\n          name='load'\r\n          value='stats'>\r\n          Завершить\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Exercise;","import React from 'react';\r\nimport './Stats.css';\r\nclass Stats extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      load: undefined,\r\n      //operator: props.operator,\r\n      //factor: props.factor ? props.factor : 2,\r\n      //first: props.first ? props.first : 2,\r\n      //second: props.second ? props.second : 1,\r\n      correct: props.correct ? props.correct : 0,\r\n      total: props.total ? props.total : 0,\r\n    }\r\n    this.handleChanges = this.handleChanges.bind(this);\r\n  }\r\n\r\n  handleChanges(event) {\r\n    const NAME = event.target.name;\r\n    const VALUE = event.target.value;\r\n    const TYPE = event.target.type;\r\n\r\n    switch (TYPE) {\r\n      case 'range':\r\n        this.setState({\r\n          [NAME]: Number(VALUE)\r\n        })\r\n        break;\r\n\r\n      case 'button':\r\n        this.setState({\r\n          [NAME]: VALUE\r\n        })\r\n        break;\r\n\r\n      case 'select-one':\r\n        this.setState({\r\n          [NAME]: VALUE\r\n        })\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.props.handleChanges(event);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n        <div className='Stats content'>\r\n          <div >\r\n            <span className=''>\r\n              Верно\r\n          </span>\r\n            <span className=''>\r\n              {this.state.correct}\r\n            </span>\r\n          </div>\r\n          <div className=''>\r\n            <span className=''>\r\n              Всего\r\n          </span>\r\n            <span className=''>\r\n              {this.state.total}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className='content'\r\n          type='button'\r\n          onClick={this.handleChanges}\r\n          name='load'\r\n          value='greet'>\r\n          В начало\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Stats;","import React from 'react';\r\nimport './Popup.css';\r\nclass Usage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      load: props.load ? props.load : 'greet',\r\n    };\r\n    this.onClick = this.popupToggle.bind(this);\r\n    this.greetUsage = (\r\n      <div>\r\n        <div className='text__section'>\r\n          <span className='text__sectiontitle'>Выбор оператора</span>\r\n          <div className='text__subsection'>\r\n            <div className='text__par'>\r\n              <p>В прямоугольнике под кнопкой \"Старт\" можно выбрать небходимый оператор.</p>\r\n              <p>Доступны: сложение, вычитание, умножение, деление. Числа генерируются псевдослучайным образом, но по определенным правилам.</p>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='text__section'>\r\n          <span className='text__sectiontitle'>Генерация выражения</span>\r\n          <div className='text__subsection'>\r\n            <div className='text__par'>\r\n              <p>Первые два поля <b>всегда</b> отвечают за число разрядов для членов выражения, т.е. у <i>первого</i> элемента будет число разрядов равное числу в <i>первом</i> поле, аналогично для второго. Далее будет описано особое поведение этих полей.</p>\r\n            </div>\r\n          </div>\r\n          <div className='text__subsection'>\r\n            <span className='text__subtitle'>Сложение</span>\r\n            <div className='text__par'>\r\n              <p>Все было описано выше, никакого особого поведения нет.</p>\r\n            </div>\r\n          </div>\r\n          <div className='text__subsection'>\r\n            <span className='text__subtitle'>Вычитание</span>\r\n            <div className='text__par'>\r\n              <p>Числа генерируются так, что <i>второй</i> член выражения будет <b>всегда</b> меньше <i>первого</i> (даже если число разрядов для <i>второго</i> члена будет указано больше, чем для <i>первого</i>).</p>\r\n            </div>\r\n          </div>\r\n          <div className='text__subsection'>\r\n            <span className='text__subtitle'>Умножение</span>\r\n            <div className='text__par'>\r\n              <p>При выборе этого оператора ображаются <b>три</b> поля ввода. Поля ввода числа разрядов и поле для ввода множителя.</p>\r\n              <p>Однако, при указании во <i>втором</i> поле значения \"<b>1</b>\", <i>второй множитель</i> <b>всегда</b> будет равен значению в поле \"Множитель\", а <i>первый множитель</i> будет <b>всегда</b> иметь <b>один</b> разряд.</p>\r\n            </div>\r\n          </div>\r\n          <div className='text__subsection'>\r\n            <span className='text__subtitle'>Деление</span>\r\n            <div className='text__par'>\r\n              <p>Числа генерируются так, что <i>делимое</i> <b>всегда</b> будет делиться <b>нацело</b>, а <i>делитель</i> <b>никогда</b> не будет равен 0.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <p>Теперь вы готовы упражняться, смело жмите кнопку \"Старт\".</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  popupToggle(event) {\r\n    // const CN = event.currentTarget;\r\n    // CN.classList.toggle('closing');\r\n    this.props.onClick(event);\r\n  }\r\n\r\n  render() {\r\n    const LOAD = this.state.load;\r\n    let usage;\r\n    switch (LOAD) {\r\n      case 'greet':\r\n        usage = this.greetUsage;\r\n    }\r\n    return (\r\n      <div className='popup' name='usage' onClick={this.onClick}>\r\n        <div className='content'>\r\n          <div className='popup__content'>\r\n            <div className='text'>\r\n              <span className='text__title'>Использование</span>\r\n              <p><i>Убедительная просьба дочитать это руководство <b>до конца</b>, особенно если вы читаете его в первый раз. Взависимости от того на какой странице Вы находитесь будет меняться содержание этого руководства. Также просьба заглядывать в DevLog, прежде чем ругаться о недочетач и т.п., возможно они уже в процессе исправления.</i></p>\r\n              {usage}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Usage;\r\n","import React from 'react';\r\nimport './Popup.css';\r\nclass DevLog extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         load: props.load ? props.load : 'greet',\r\n      }\r\n      this.lastUpdated = '07.11.2020';\r\n      this.onClick = this.popupToggle.bind(this);\r\n      this.content = (\r\n         <div>\r\n            <div className='text__section'>\r\n               <span className='text__sectiontitle'>Известные баги, недороботки недочеты</span>\r\n               <div className='text__subsection'>\r\n                  <div className='text__par'>\r\n                     <li className='red'>В некоторых случаях число генерируется неправильно и выдает 100-значное число. Лечится перезагрузкой, было замечено только на телефонах.</li>\r\n                     <li>Не отображает верен или нет ответ.</li>\r\n                     <li className='red'>Нет списка нерешенных примеров. Ну или хотя бы списка всех примеров.</li>\r\n                     <li className='red'>Не обнуляет поле ввода.</li>\r\n                     <li>Внешний вид примеров и статистики вообще в нуле.</li>\r\n                     <li>При горизонтальном повороте телефона кнопки \"Помощь\" и \"DevLog\" прячутся за остальные.</li>\r\n                     <li className='red'>Наверное стоит переписать \"Помощь\".</li>\r\n                     <li className='red'>Нет проверки на корректность воодимых данных. Можно ввести число большее, чем предусмотренно и запустить упражнение. Например, можно ввести в поле множитель число 12, нажать \"Старт\" и тогда все примеры будут с умножением на 12.</li>\r\n                     <li>Пустая \"Помощь\" для статистики и упражнения.</li>\r\n                     <li>Не хватает картинок.</li>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div className='text__section'>\r\n               <span className='text__sectiontitle'>Изменения</span>\r\n               <div className='text__subsection'>\r\n                  <span className='text__subtitle'>Добавлено</span>\r\n                  <div className='text__par'>\r\n                     <li>Ну собственно этот раздел.</li>\r\n                     <li>Помощь.</li>\r\n                     <li>Анимации.</li>\r\n                     <li>Выделения цветом.</li>\r\n                  </div>\r\n               </div>\r\n               <div className='text__subsection'>\r\n                  <span className='text__subtitle'>Изменено</span>\r\n                  <div className='text__par'>\r\n                     <li>Внешний вид главного меню.</li>\r\n                     <li>Внешний вид некоторых элементов.</li>\r\n                     <li>Не знаю стоит ли писать о внутренних изменениях, но они были. :D</li>\r\n                     <li className='green'>Теперь при переходе к упражнению модальное окно как и положено прячется.</li>\r\n                     <li className='green'>При выборе <b>любого</b> оператора подписи не пропадают.</li>\r\n                  </div>\r\n               </div>\r\n               <div className='text__subsection'>\r\n                  <span className='text__subtitle'>Убрано</span>\r\n                  <div className='text__par'>\r\n                     <li>Пока ничего.</li>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div className='text__section'>\r\n               <span className='text__sectiontitle'>Планы</span>\r\n               <div className='text__subsection'>\r\n                  <span className='text__subtitle'>Добавить</span>\r\n                  <div className='text__par'>\r\n                     <p>УХХХХХ.... ПОГНАЛИ!</p>\r\n                     <li>Обнуление поля ввода ответа.</li>\r\n                     <li>Список неправильных ответов. Ну или вообще список ответов.</li>\r\n                     <li>Отображение корректности ответа. Хотя, возможно, оно и не надо вовсе, если выводить номер и список ответов.</li>\r\n                     <li>Номер примера</li>\r\n                     <li>Минимальное количество решенных примеров, чтобы не получалось выйти из упражнения без перезагрузки страницы.</li>\r\n                     <li>\"Помощь\" для упражнений и статистики.</li>\r\n                  </div>\r\n               </div>\r\n               <div className='text__subsection'>\r\n                  <span className='text__subtitle'>Изменить</span>\r\n                  <div className='text__par'>\r\n                     <li>Внешний вид главного меню для мобильных.</li>\r\n                     <li>Внешний вид статистики и упражнений.</li>\r\n                     <li>Внешний вид некоторых элементов.</li>\r\n                  </div>\r\n               </div>\r\n               <div className='text__subsection'>\r\n                  <span className='text__subtitle'>Убрать</span>\r\n                  <div className='text__par'>\r\n                     <li>Пока ничего. Но, уверен, найдется.</li>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div className='text__section'>\r\n               <span className='text__sectiontitle'>Связь</span>\r\n               <p>Пока что связь осуществляется через <a className='gray' type='link' href='https://vk.com/cxii112'>Вконтакте</a>. Прошу прикреплять снимки экрана с недочетами, ошибками и пр. или подробно описывать недоработки. Желательно подробно рассказать о действиях, которые были совершены перед тем, как появилась ошибка (возможно они и не связаны).</p>\r\n               <p></p>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n\r\n   popupToggle(event) {\r\n      // const CN = event.currentTarget;\r\n      // CN.classList.toggle('closing');\r\n      this.props.onClick(event);\r\n   }\r\n\r\n   render() {\r\n      const LOAD = this.state.load;\r\n      let devLog;\r\n      switch (LOAD) {\r\n         case 'greet':\r\n            devLog = this.content;\r\n      }\r\n      return (\r\n         <div className='popup' name='devLog' onClick={this.onClick}>\r\n            <div className='content'>\r\n               <div className='popup__content'>\r\n                  <div className='text'>\r\n                     <span className='text__title'>DevLog</span>\r\n                     <p>Здесь будет размещаться информация о ходе разработки и пр.</p>\r\n                     {devLog}\r\n                     <p>Обновено <span className='gray'>{this.lastUpdated}</span></p>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default DevLog;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Greet from './Greet/Greet';\r\nimport Exercise from './Exercise/Exercise';\r\nimport Stats from './Stats/Stats';\r\nimport Usage from './Popups/Usage';\r\nimport DevLog from './Popups/DevLog';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      load: props.load ? props.load : 'greet',\r\n      usage: false,\r\n      devLog: false,\r\n      operator: 'mul',\r\n      factor: props.factor ? props.factor : 5,\r\n      first: props.first ? props.first : 1,\r\n      second: props.second ? props.second : 1,\r\n      correct: props.correct ? props.correct : 0,\r\n      total: props.total ? props.total : 0,\r\n    }\r\n\r\n    this.handleChanges = this.handleChanges.bind(this);\r\n    this.statsUpd = this.statsUpd.bind(this);\r\n    this.popupToggle = this.popupToggle.bind(this);\r\n    //this.statsUpd = this.statsUpd.bind(this);\r\n    this.options = (\r\n      <div className='options'>\r\n        <button\r\n          type='button'\r\n          name='devLog'\r\n          //value='true'\r\n          onClick={this.handleChanges}>\r\n          DevLog\r\n        </button>\r\n        <button\r\n          type='button'\r\n          name='usage'\r\n          //value='true'\r\n          onClick={this.handleChanges}>\r\n          Помощь\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  statsUpd(newStats) {\r\n    this.setState({\r\n      total: newStats.total,\r\n      correct: newStats.correct,\r\n    })\r\n  }\r\n\r\n  popupToggle(event) {\r\n    // const CN = event.currentTarget;\r\n    // CN.classList.toggle('open');\r\n    console.log(`popup ${event.target.name}`)\r\n    const NAME = event.target.name;\r\n    if (this.state.usage) {\r\n      this.setState({\r\n        usage: !this.state.usage\r\n      });\r\n    }\r\n    if (this.state.devLog) {\r\n      this.setState({\r\n        devLog: !this.state.devLog\r\n      });\r\n    }\r\n    // switch (NAME) {\r\n    //   case 'usage':\r\n    //     this.setState({\r\n    //       usage: !this.state.usage\r\n    //     });\r\n    //     break;\r\n    //   case 'devLog':\r\n    //     this.setState({\r\n    //       devLog: !this.state.devLog\r\n    //     });\r\n    //     break;\r\n\r\n    //   default:\r\n    //     break;\r\n    //};\r\n  }\r\n\r\n  handleChanges(event) {\r\n    const NAME = event.target.name;\r\n    const VALUE = event.target.value;\r\n    const TYPE = event.target.type;\r\n    //console.log(TYPE);\r\n\r\n    switch (TYPE) {\r\n      case 'number':\r\n        this.setState({\r\n          [NAME]: Number(VALUE)\r\n        })\r\n        break;\r\n\r\n      case 'button':\r\n        switch (NAME) {\r\n          case 'usage':\r\n            this.setState({\r\n              usage: !this.state.usage\r\n            })\r\n            break;\r\n          case 'devLog':\r\n            this.setState({\r\n              devLog: true\r\n            })\r\n            break;\r\n          default:\r\n            this.setState({\r\n              [NAME]: VALUE\r\n            })\r\n            break;\r\n        }\r\n        break;\r\n\r\n      case 'select-one':\r\n        this.setState({\r\n          [NAME]: VALUE\r\n        })\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const OPERATOR = this.state.operator;\r\n    const LIMITS = this.state.limits;\r\n    const OPTIONS = this.options;\r\n    let load;\r\n    let usage;\r\n    let devLog;\r\n\r\n    if (this.state.usage) {\r\n      usage = (<Usage onClick={this.popupToggle} />);\r\n    }\r\n    if (this.state.devLog) {\r\n      devLog = (<DevLog onClick={this.popupToggle} />);\r\n    }\r\n\r\n    switch (this.state.load) {\r\n      case 'exercise':\r\n        load = (\r\n          <Exercise\r\n            operator={this.state.operator}\r\n            factor={this.state.factor}\r\n            first={this.state.first}\r\n            second={this.state.second}\r\n            handleChanges={this.handleChanges}\r\n            statsUpd={this.statsUpd} />\r\n        )\r\n        break;\r\n\r\n      case 'stats':\r\n        load = (\r\n          <Stats\r\n            //operator={this.state.operator}\r\n            correct={this.state.correct}\r\n            total={this.state.total}\r\n            handleChanges={this.handleChanges} />\r\n        )\r\n        break;\r\n\r\n      default:\r\n        load = (<Greet\r\n          operator={this.state.operator}\r\n          factor={this.state.factor}\r\n          first={this.state.first}\r\n          second={this.state.second}\r\n          handleChanges={this.handleChanges} />)\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div className='container'>\r\n        {/* <div className='options'>\r\n          <button\r\n            type='button'\r\n            name='devLog'\r\n            value='true'\r\n            onClick={this.popupToggle}>\r\n            DevLog\r\n        </button>\r\n          <button\r\n            type='button'\r\n            name='usage'\r\n            value='true'\r\n            onClick={this.popupToggle}>\r\n            Помощь\r\n        </button>\r\n        </div> */}\r\n        {OPTIONS}\r\n        <div className='content'>\r\n          <div className='App'>\r\n            {load}\r\n          </div>\r\n        </div>\r\n        {usage}\r\n        {devLog}\r\n      </div>);\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}